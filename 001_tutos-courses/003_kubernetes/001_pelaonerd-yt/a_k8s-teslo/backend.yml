### Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: klerith/k8s-teslo-backend:1.1.0
          ports:
            - containerPort: 3000
          env:
            - name: APP_VERSION
              value: '1.1.0'
            - name: PORT
              value: '3000'   # el mismo q   containerPort
            - name: STAGE
              value: 'prod'
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config   # no el file name, metadata postgres-config.tml
                  key: DB_NAME
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DB_HOST

            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DB_PORT

            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: DB_USER

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: DB_PASSWORD

            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: JWT_SECRET


---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: NodePort

  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3000       # el puerto del containerPort
      targetPort: 3000
      nodePort: 30300  # (30_000-32_000)
