{"version":3,"file":"confirm.min.js","sources":["../src/confirm.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/messages/>.\r\n\r\n/**\r\n * Show a delete message modal instead of doing it on a separate page.\r\n * @module     local_message\r\n * @copyright  2023 Adrian Changalombo\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine([\r\n  'jquery',\r\n  'core/modal_factory',\r\n  'core/str',\r\n  'core/modal_events',\r\n  'core/ajax',\r\n  'core/notification',\r\n], function ($, ModalFactory, String, ModalEvents, Ajax, Notification) {\r\n  const trigger = $('.local_message_delete_btn');\r\n\r\n  ModalFactory.create(\r\n    {\r\n      type: ModalFactory.types.SAVE_CANCEL,\r\n      title: String.get_string('delete_message', 'local_message'),\r\n      body: String.get_string('delete_message_confirm', 'local_message'),\r\n\r\n      // Do something before we render the modal\r\n      preShowCallback: function (triggerElement, modal) {\r\n        triggerElement = $(triggerElement);\r\n        const messageid = triggerElement.data('messageId');\r\n\r\n        // Set the message id in this modal.\r\n        modal.params = { messageid: messageid };\r\n        modal.setSaveButtonText(\r\n          String.get_string('delete_message', 'local_message')\r\n        );\r\n      },\r\n      large: true,\r\n    },\r\n    trigger\r\n  ).done(function (modal) {\r\n    // Do what you want with your new modal.\r\n    modal.getRoot().on(ModalEvents.save, function (e) {\r\n      e.preventDefault();\r\n\r\n      Y.log(modal.params);\r\n\r\n      const request = {\r\n        methodname: 'local_message_delete_message',\r\n        args: modal.params,\r\n      };\r\n\r\n      Ajax.call([request])[0]\r\n        .done(data => {\r\n          if (data === true) {\r\n            window.location.reload();\r\n          } else {\r\n            Notification.addNotification({\r\n              message: String.get_string(\r\n                'delete_message_faild',\r\n                'local_message'\r\n              ),\r\n              type: 'error',\r\n            });\r\n          }\r\n        })\r\n        .fail(Notification.exception);\r\n    });\r\n  });\r\n});\r\n"],"names":["define","$","ModalFactory","String","ModalEvents","Ajax","Notification","trigger","create","type","types","SAVE_CANCEL","title","get_string","body","preShowCallback","triggerElement","modal","messageid","data","params","setSaveButtonText","large","done","getRoot","on","save","e","preventDefault","Y","log","request","methodname","args","call","window","location","reload","addNotification","message","fail","exception"],"mappings":";;;;;;AAsBAA,+BAAO,CACL,SACA,qBACA,WACA,oBACA,YACA,sBACC,SAAUC,EAAGC,aAAcC,OAAQC,YAAaC,KAAMC,oBACjDC,QAAUN,EAAE,6BAElBC,aAAaM,OACX,CACEC,KAAMP,aAAaQ,MAAMC,YACzBC,MAAOT,OAAOU,WAAW,iBAAkB,iBAC3CC,KAAMX,OAAOU,WAAW,yBAA0B,iBAGlDE,gBAAiB,SAAUC,eAAgBC,aAEnCC,WADNF,eAAiBf,EAAEe,iBACcG,KAAK,aAGtCF,MAAMG,OAAS,CAAEF,UAAWA,WAC5BD,MAAMI,kBACJlB,OAAOU,WAAW,iBAAkB,mBAGxCS,OAAO,GAETf,SACAgB,MAAK,SAAUN,OAEfA,MAAMO,UAAUC,GAAGrB,YAAYsB,MAAM,SAAUC,GAC7CA,EAAEC,iBAEFC,EAAEC,IAAIb,MAAMG,cAENW,QAAU,CACdC,WAAY,+BACZC,KAAMhB,MAAMG,QAGdf,KAAK6B,KAAK,CAACH,UAAU,GAClBR,MAAKJ,QACS,IAATA,KACFgB,OAAOC,SAASC,SAEhB/B,aAAagC,gBAAgB,CAC3BC,QAASpC,OAAOU,WACd,uBACA,iBAEFJ,KAAM,aAIX+B,KAAKlC,aAAamC"}